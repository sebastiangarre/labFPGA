LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_arith.ALL;
USE ieee.std_logic_unsigned.ALL;

-- Esta es la entidad del testbench
ENTITY Restador_Completo_4b_t IS
END tb_Restador_Completo_4b_t;

ARCHITECTURE behavior OF Restador_Completo_4b_t IS

    -- Component para el restador de 4 bits a probar
    COMPONENT Restador_Completo_4b
        PORT(
            a0 : IN  STD_LOGIC;
            b0 : IN  STD_LOGIC;
            a1 : IN  STD_LOGIC;
            b1 : IN  STD_LOGIC;
            a2 : IN  STD_LOGIC;
            b2 : IN  STD_LOGIC;
            a3 : IN  STD_LOGIC;
            b3 : IN  STD_LOGIC;
            bin : IN  STD_LOGIC;
            CLOCK : IN  STD_LOGIC;
            bout : OUT STD_LOGIC;
            z3 : OUT STD_LOGIC;
            z2 : OUT STD_LOGIC;
            z1 : OUT STD_LOGIC;
            z0 : OUT STD_LOGIC
        );
    END COMPONENT;

    -- Señales para conectar al componente
    SIGNAL a0, b0, a1, b1, a2, b2, a3, b3, bin, CLOCK : STD_LOGIC := '0';
    SIGNAL bout, z3, z2, z1, z0 : STD_LOGIC;

BEGIN

    -- Instancia del restador de 4 bits
    uut: Restador_Completo_4b PORT MAP (
        a0 => a0,
        b0 => b0,
        a1 => a1,
        b1 => b1,
        a2 => a2,
        b2 => b2,
        a3 => a3,
        b3 => b3,
        bin => bin,
        CLOCK => CLOCK,
        bout => bout,
        z3 => z3,
        z2 => z2,
        z1 => z1,
        z0 => z0
    );

    -- Generador de reloj
    CLOCK_process : PROCESS
    BEGIN
        CLOCK <= '0';
        WAIT FOR 10 ns;
        CLOCK <= '1';
        WAIT FOR 10 ns;
    END PROCESS;

    -- Proceso para aplicar señales de prueba
    stim_proc: PROCESS
    BEGIN
        -- Prueba 1
        a3 <= '0'; a2 <= '1'; a1 <= '1'; a0 <= '0'; 
        b3 <= '0'; b2 <= '1'; b1 <= '0'; b0 <= '1'; 
        bin <= '0';
        WAIT FOR 20 ns;
        
        -- Prueba 2
        a3 <= '1'; a2 <= '0'; a1 <= '0'; a0 <= '1';
        b3 <= '0'; b2 <= '1'; b1 <= '1'; b0 <= '0';
        bin <= '1';
        WAIT FOR 20 ns;
        
        -- Prueba 3
        a3 <= '0'; a2 <= '1'; a1 <= '0'; a0 <= '0';
        b3 <= '0'; b2 <= '0'; b1 <= '1'; b0 <= '1';
        bin <= '0';
        WAIT FOR 20 ns;

        -- Prueba 4
        a3 <= '1'; a2 <= '1'; a1 <= '1'; a0 <= '1';
        b3 <= '0'; b2 <= '0'; b1 <= '0'; b0 <= '0';
        bin <= '0';
        WAIT FOR 20 ns;
		  
        -- Prueba 5
        a3 <= '1'; a2 <= '1'; a1 <= '1'; a0 <= '1'; 
        b3 <= '0'; b2 <= '1'; b1 <= '0'; b0 <= '1'; 
        bin <= '0';
        WAIT FOR 20 ns;
        
        -- Prueba 6
        a3 <= '1'; a2 <= '1'; a1 <= '1'; a0 <= '1';
        b3 <= '0'; b2 <= '1'; b1 <= '1'; b0 <= '0';
        bin <= '1';
        WAIT FOR 20 ns;
        
        -- Prueba 7
        a3 <= '1'; a2 <= '1'; a1 <= '1'; a0 <= '1';
        b3 <= '0'; b2 <= '0'; b1 <= '1'; b0 <= '1';
        bin <= '0';
        WAIT FOR 20 ns;

        -- Prueba 8
        a3 <= '1'; a2 <= '1'; a1 <= '1'; a0 <= '1';
        b3 <= '1'; b2 <= '1'; b1 <= '1'; b0 <= '1';
        bin <= '0';
        WAIT FOR 20 ns;
        -- Agregar más pruebas según sea necesario
        -- ...

        WAIT;
    END PROCESS;

END behavior;